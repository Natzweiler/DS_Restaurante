/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import BO.MeseroBO;
import Interfaces.IMeseroBO;
import Persistencia.MeseroDAO;
import dtos.MeseroDTO;
import interfaces.IMeseroDAO;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import negocio.exception.NegocioException;
import objetosnegocio.MeseroON;


/**
 * La clase **PantallaGestionMeseros** es una interfaz gráfica de usuario (GUI)
 * que proporciona una vista general de los meseros activos y permite realizar
 * operaciones de gestión como agregar, modificar o deshabilitar/habilitar meseros.
 * Actúa como un centro de control para las operaciones relacionadas con meseros,
 * delegando la navegación a otras pantallas a través del {@link CoordinadorPantallas}.
 *
 * Extiende de {@code javax.swing.JFrame} para funcionar como una ventana de aplicación.
 *
 * @author Gael
 * @version 1.0
 */
public class PantallaGestionMeseros extends javax.swing.JFrame {

    /**
     * Creates new form PantallaGestionMeseros
     */
    private List<MeseroDTO> listaMeseros;
        /**
     * Crea una nueva instancia del formulario `PantallaGestionMeseros`.
     * Inicializa los componentes de la interfaz de usuario y carga la lista de meseros
     * activos al momento de la creación de la ventana.
     */
    public PantallaGestionMeseros() {
        initComponents();
        cargarMeseros();
    }
        /**
     * Carga la lista de meseros **activos** desde la capa de negocio
     * y los muestra en el componente `JList`.
     * Muestra un mensaje de error si la carga falla.
     */
    private void cargarMeseros() {
    try {
        IMeseroDAO meseroDAO = MeseroDAO.getInstanceDAO();
        IMeseroBO meseroBO = new MeseroBO(meseroDAO);
        
        listaMeseros = meseroBO.obtenerMeserosActivos();  

        DefaultListModel<MeseroDTO> modelo = new DefaultListModel<>();
        for (MeseroDTO mesero : listaMeseros) {
            modelo.addElement(mesero);
        }

        listadeMeseros.setModel(modelo);

    } catch (NegocioException e) {
        JOptionPane.showMessageDialog(this,
            "Error al cargar meseros activos: " + e.getMessage(),
            "Error", JOptionPane.ERROR_MESSAGE);
    }
}
  //llevar al mesero seleccionaod a la siguiente pestaña
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadeMeseros = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Gestion de Meseros");

        jLabel2.setText("Meseros activos:");

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnAgregar.setText("Registrar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Deshabilitar/Activar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        listadeMeseros.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listadeMeserosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listadeMeseros);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegresar)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnModificar)
                        .addGap(40, 40, 40)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(btnAgregar)
                        .addGap(35, 35, 35))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegresar)
                            .addComponent(btnAgregar)
                            .addComponent(btnModificar)
                            .addComponent(btnEliminar))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        /**
     * Maneja el evento de acción del botón "Regresar".
     * Navega de vuelta al menú principal a través del {@link CoordinadorPantallas}
     * y cierra la ventana actual.
     *
     * @param evt El evento de acción.
     */
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here
        Coordinador.CoordinadorPantallas.getInstance().mostrarMenu();
        dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed
        /**
     * Maneja el evento de acción del botón "Agregar".
     * Navega a la pantalla para registrar un nuevo mesero a través del {@link CoordinadorPantallas}
     * y cierra la ventana actual.
     *
     * @param evt El evento de acción.
     */
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        Coordinador.CoordinadorPantallas.getInstance().mostrarAgregarMesero();
        dispose();
    }//GEN-LAST:event_btnAgregarActionPerformed
        /**
     * Maneja el evento de acción del botón "Eliminar" (o Deshabilitar/Habilitar).
     * Navega a la pantalla para deshabilitar o habilitar meseros a través del {@link CoordinadorPantallas}
     * y cierra la ventana actual.
     *
     * @param evt El evento de acción.
     */
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        Coordinador.CoordinadorPantallas.getInstance().mostrarEliminarMesero();
        dispose();
    }//GEN-LAST:event_btnEliminarActionPerformed
        /**
     * Maneja el evento de acción del botón "Modificar".
     * Obtiene el mesero seleccionado de la lista y lo pasa a la pantalla de modificación
     * a través del {@link CoordinadorPantallas}. Si no hay mesero seleccionado,
     * muestra un mensaje de advertencia.
     *
     * @param evt El evento de acción.
     */
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        MeseroDTO meseroSeleccionado = listadeMeseros.getSelectedValue();
        if (meseroSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "Selecciona un mesero de la lista para modificarlo.");
            return;
        }
       
        PantallaModificarMesero pm = new PantallaModificarMesero();
        pm.setMesero(meseroSeleccionado);
        pm.setLocationRelativeTo(null);
        pm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void listadeMeserosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listadeMeserosValueChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_listadeMeserosValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaGestionMeseros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaGestionMeseros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaGestionMeseros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaGestionMeseros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaGestionMeseros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<MeseroDTO> listadeMeseros;
    // End of variables declaration//GEN-END:variables
}
